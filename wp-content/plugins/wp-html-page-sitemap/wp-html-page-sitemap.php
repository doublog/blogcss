<?php/**  Plugin Name: WP Html Page Sitemap  Plugin URI: https://wordpress.org/plugins/wp-html-page-sitemap/  Description: This Plugin is simple and light weighted plugin to generate Page sitemap and post (CPT) site map. Use shortcode [SITEMAP], [sitemap] in page content.  Author: Review Rights (Pa1).  Author URI: http://www.reviewrights.com  Version: 2.2  License: GPLv2 or later  License URI: http://www.gnu.org/licenses/gpl-2.0.html */if (!class_exists('WP_HtmlSitemap')):    /**     * WP Sitemap class.     */    class WP_HtmlSitemap {        public $classes = 'wp-sitemap';        public $id = '';        public function __construct() {            /**             * Add Setting Page             */            add_action('admin_menu', array($this, 'wp_site_map_menu_init'));            /**             * Add Style Page             */            add_action('admin_enqueue_scripts', array($this, 'rr_add_stylesheet_sitemap'));            add_action('wp_head', array($this, 'rr_add_stylesheet_sitemap'));            /**             * Add shortcodes.             */            add_shortcode('SITEMAP', array($this, 'wp_Htmlsitemap_Shortcode'));            add_shortcode('sitemap', array($this, 'wp_Htmlsitemap_Shortcode'));            add_shortcode('HTMP_sitemap', array($this, 'wp_Htmlsitemap_Shortcode'));            add_shortcode('WP_htmlsitemap', array($this, 'wp_Htmlsitemap_Shortcode'));        }        public function wp_site_map_menu_init() {            add_options_page('HTML Site Map', 'HTML Site Map', 'manage_options', 'wp-html-page-site-map', array($this, 'wp_html_page_site_map_option_html'));        }        public function rr_add_stylesheet_sitemap() {            wp_enqueue_style('rr-style', plugins_url('/css/wp-html-page-site-map.css', __FILE__));        }        /**         * Version 2.1         * Add setting to include Post,Page and custom post types on site map.          */        public function wp_html_page_site_map_option_html() {            ?>            <div class="wrap rr-sitemap-setting">                <h1>WP HTML SITE MAP SETTINGS</h1>                <?php                if (isset($_POST['submit'])):                    update_option('rr_site_map_setting', $_POST['post_select']);                    update_option('rr_site_map_excludes_ids', $_POST['exclude_ids']);                endif;                $rr_site_map_setting = get_option('rr_site_map_setting', '');                $rr_excludes_ids = get_option('rr_site_map_excludes_ids', '');                $ptype = get_post_types(array('public' => TRUE), 'names');                if (!is_array($rr_site_map_setting)):                    $rr_sitemapOption = array('page');                else:                    $rr_sitemapOption = $rr_site_map_setting;                endif;                ?>                <form action="" method="POST">                    <ul class="rr-post-list">                        <?php                        if (count($ptype)):                            foreach ($ptype as $pt):                                echo '<li><input type="checkbox" name="post_select[]" ' . ((in_array($pt, $rr_sitemapOption)) ? 'checked="checked"' : '') . ' value="' . $pt . '"/><strong>' . ucwords(str_replace('-', ' ', $pt)) . '</strong></li>';                            endforeach;                        endif;                        ?>                    </ul>                    <div style="width: 100%; display: block; float: left;">                        <label><strong> Exclude Posts from site map:</strong></label>                        <br/>                        <input type="text" size="80" value="<?php echo $rr_excludes_ids; ?>" name="exclude_ids"/>                        &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span><code>Put post ID with comma(,) separated. Ex: 21,23,24 </code></span>                    </div>                    <?php submit_button() ?>                </form>            </div>            <?php        }        public function wp_Htmlsitemap_Shortcode($args = array(), $content = null) {            if (is_feed())                return '';            if (isset($args['class']) && !empty($args['class'])) {                $this->classes = $args['class'];                unset($args['class']);            }            if (isset($args['id']) && !empty($args['id'])) {                $this->id = $args['id'];                unset($args['id']);            }            $args['echo'] = 0;            $args['title_li'] = '';            unset($args['link_before']);            unset($args['link_after']);            if (isset($args['child_of']) && $args['child_of'] == 'CURRENT') {                $args['child_of'] = get_the_ID();            } else if (isset($args['child_of']) && $args['child_of'] == 'PARENT') {                $post = &get_post(get_the_ID());                if ($post->post_parent)                    $args['child_of'] = $post->post_parent;                else                    unset($args['child_of']);            }            /**             * Version 2.1             * Exclude Pages by id              */            if (isset($args['exclude']) && !empty($args['exclude'])):                $rr_excludes_ids = get_option('rr_site_map_excludes_ids', '');                if ($rr_excludes_ids):                    $args['exclude'] = $rr_excludes_ids;                endif;            endif;            /**             * Get page lists.             */            $wpHtml = wp_list_pages($args);            /**             * Remove default classes form each list.             */            $wpHtml = preg_replace('/( class="[^"]+")/is', '', $wpHtml);            /**             * wrapping all list with in ul.             */            $wpHtml = '<div class="rr-sitemap-section"><ul' . (($this->classes) ? " class='" . $this->classes . "'" : "") . ' ' . (($this->id) ? " id='" . $this->id . "'" : "") . '>' . $wpHtml . '</ul></div>';            /**             * Version 2.1             * Custom postype site map.             */            $wpHtmlSiteList = '';            $rr_site_map_setting = get_option('rr_site_map_setting');            if (!is_array($rr_site_map_setting)):                $rr_site_map_setting = array('page');            endif;            if (is_array($rr_site_map_setting) && count($rr_site_map_setting)):                $siteMapHtml = '';                $rr_excludes_ids = get_option('rr_site_map_excludes_ids', '');                if ($rr_excludes_ids):                    $excludeIds = explode(',', $rr_excludes_ids);                else:                    $excludeIds = array();                endif;                foreach ($rr_site_map_setting as $st):                    if ($st != 'page'):                        $postData = get_posts(array('post_type' => $st, 'orderby' => 'post_title', 'order' => 'ASC', 'exclude' => $excludeIds));                        $pTSting = '';                        if (count($postData)):                            foreach ($postData as $pd):                                $pTSting .='<li><a href="' . get_the_permalink($pd->ID) . '" title="' . $pd->post_title . '">' . $pd->post_title . '</a></li>';                            endforeach;                            $siteMapHtml .= '<div class="rr-sitemap-section">'                                    . '<h2 title="' . ucwords(str_replace('-', ' ', $st)) . '">' . ucwords(str_replace('-', ' ', $st)) . '</h2>'                                    . '<ul ' . (($this->classes) ? " class='" . $this->classes . "'" : "") . '>' . $pTSting                                    . '</ul>'                                    . '</div>';                        endif;                    endif;                endforeach;            endif;            if (count($rr_site_map_setting) && !in_array('page', $rr_site_map_setting)):                /**                 * Page and all setected post type list.                 */                $wpHtmlSiteList = $siteMapHtml;            else:                /**                 * All setected post type list.                 */                $wpHtmlSiteList = $wpHtml . $siteMapHtml;            endif;            /**             * Return Sitemap list             */            // End Version 2.1            return $wpHtmlSiteList;        }    }    /**     * WP_HtmlSitemap class object.     */    $WP_HtmlSitemap = new WP_HtmlSitemap();     endif;